version: '3'
# docker-compose --env-file .vps.env up

services:
  db:
    container_name: ${DB_CONTAINER_NAME}
    image: postgres:14.5
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:7.0.4
    restart: always
    volumes:
      - ./data/cache:/data
    expose:
      - ${REDIS_PORT}

  web:
    container_name: ${DJANGO_CONTAINER_NAME}
    build: .
    command: ["sh", "./docker-entrypoint.sh"]
    restart: always
    volumes:
      - ./educa:/educa
#      - ./config/gunicorn/gunicorn.service:/etc/systemd/system/gunicorn.service
#      - ./config/gunicorn/gunicorn.socket:/etc/systemd/system/gunicorn.socket
    env_file:
      - .vps.env
    depends_on: 
      - db
      - redis
    expose:
      - 8000

  nginx:
    container_name: ${NGINX_CONTAINER_NAME}
    build: ./config/nginx
    restart: always
    volumes:
      - ./educa:/educa
      - ./config/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
    ports:
      - ${NG_EXT_PORT1}:${NG_INT_PORT1}
      - ${NG_EXT_PORT2}:${NG_INT_PORT2}
    env_file:
      - .vps.env
    depends_on:
      - web
      - adminer
      - chat

  adminer:
    container_name: ${ADMINER_CONTAINER_NAME}
    image: adminer
    restart: always
    expose:
      - 8080
    depends_on:
      - db

  chat:
    container_name: ${DAPHNE_CONTAINER_NAME}
    build: .
    working_dir: /educa
    command: ["sh", "./docker-entrypoint_chat.sh"]
    restart: always
    volumes:
      - ./educa:/educa
    env_file: .vps.env
    depends_on:
      - db
      - redis
    expose:
      - 443
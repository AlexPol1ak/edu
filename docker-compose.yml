version: '3'
# docker-compose --env-file .vps.env up

services:
  db:
    container_name: ${DB_CONTAINER_NAME}
    image: postgres:14.5
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
#    env_file:
#      - .vps.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:7.0.4
    restart: always
    volumes:
      - ./data/cache:/data

  daphne:
    container_name: ${DAPHNE_CONTAINER_NAME}
    build: .
    working_dir: /code/educa/
    command: ["../wait-for-it.sh", "db:5432", "--", "daphne", "-u", "/code/educa/daphne.sock",
              "educa.asgi:application"]
    restart: always
    volumes:
      - .:/code
    env_file: .vps.env
    depends_on:
      - db
      - redis

  web:
    container_name: ${DJANGO_CONTAINER_NAME}
    build: .
#    command: "python educa/manage.py runserver 0.0.0.0:8000"
#    command: ["./wait-for-it.sh", "db:5432", "--", "uwsgi", "--ini", "/code/config/uwsgi/uwsgi.ini"]
#    command: "daphne educa.educa.wsgi:application"
#    command: ["./wait-for-it.sh", "db:5432", "--", "daphne", "-u", "/code/educa/daphne.sock",
#              "educa.educa.asgi:application"]
    command: "gunicorn educa.educa.wsgi:application --bind 0.0.0.0:8000"
    #    restart: always
    env_file: .vps.env
    volumes:
      - .:/code
    environment:
      - DJANGO_SETTINGS_MODULE=educa.settings.prod_vps
    depends_on: 
      - db
      - redis

  adminer:
    container_name: ${ADMINER_CONTAINER_NAME}
    image: adminer
    restart: always
    ports:
      - 8080:8080

  nginx:
    container_name: ${NGINX_CONTAINER_NAME}
    image: nginx:1.23.1
    restart: always
    volumes:
      - ./config/nginx:/etc/nginx/templates
      - .:/code
    ports:
      - "80:80"
      - "443:443"
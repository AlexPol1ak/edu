version: '3'
# docker-compose --env-file .vps.env up

services:
  db:
    container_name: ${DB_CONTAINER_NAME}
    image: postgres:14.5
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
#    env_file:
#      - .vps.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:7.0.4
    restart: always
    volumes:
      - ./data/cache:/data

  web:
    container_name: ${DJANGO_CONTAINER_NAME}
    build: .
    command: ["./wait-for-it.sh", "${DB_CONTAINER_NAME}:5432", "--", "sh", "./educa/docker-entrypoint.sh"]

#    restart: always
    volumes:
      - .:/code
      - ./config/gunicorn/gunicorn.service:/etc/systemd/system/gunicorn.service
    depends_on: 
      - db
      - redis
    expose:
      - 8000

  nginx:
    container_name: ${NGINX_CONTAINER_NAME}
    build: ./config/nginx
#    restart: always
    volumes:
      - .:/code
    ports:
      - "1337:80"
#      - "443:443"
    env_file:
      - .vps.env

  adminer:
    container_name: ${ADMINER_CONTAINER_NAME}
    image: adminer
    restart: always
    ports:
      - 8080:8080


#  daphne:
#    container_name: ${DAPHNE_CONTAINER_NAME}
#    build: .
#    working_dir: /code/educa/
#    command: ["../wait-for-it.sh", "db:5432", "--", "daphne", "-u", "/code/educa/daphne.sock",
#              "educa.asgi:application"]
#    restart: always
#    volumes:
#      - .:/code
#    env_file: .vps.env
#    depends_on:
#      - db
#      - redis